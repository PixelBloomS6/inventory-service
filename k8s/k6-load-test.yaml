apiVersion: v1
kind: ConfigMap
metadata:
  name: k6-inventory-script
  namespace: pixelbloom-prod
data:
  load-test.js: |
    import http from 'k6/http';
    import { check, sleep } from 'k6';

    export let options = {
      vus: 50,
      duration: '2m',
      thresholds: {
        http_req_duration: ['p(95)<2000'],
        http_req_failed: ['rate<0.1'],
      },
    };

    const url = 'http://inventory-service.pixelbloom-prod.svc.cluster.local/inventory/items/';
    export default function () {
      const payload = {
        shop_id: '3fa85f64-5717-4562-b3fc-2c963f66afa6',
        name: 'Test Bouquet ' + Math.random().toString(36).substring(7),
        description: 'Load test item',
        category: 'Test',
        price: 19.99,
        quantity: 20,
      };

      const formData = Object.entries(payload).map(([key, value]) =>
        `${encodeURIComponent(key)}=${encodeURIComponent(value)}`
      ).join('&');

      const headers = {
        'Content-Type': 'application/x-www-form-urlencoded',
      };

      const res = http.post(url, formData, { headers });

      check(res, {
        'status is 200 or 201': r => r.status === 200 || r.status === 201,
        'response time < 2s': r => r.timings.duration < 2000,
      });

      sleep(1);
    }
---
apiVersion: batch/v1
kind: Job
metadata:
  name: k6-inventory-load-test
  namespace: pixelbloom-prod
spec:
  template:
    spec:
      containers:
        - name: k6
          image: grafana/k6:latest
          command: ["k6", "run", "/scripts/load-test.js"]
          volumeMounts:
            - name: k6-script
              mountPath: /scripts
      volumes:
        - name: k6-script
          configMap:
            name: k6-inventory-script
      restartPolicy: Never
  backoffLimit: 0
