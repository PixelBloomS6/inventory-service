name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      # Step 4: Build the FastAPI app (check if it starts without errors)
      - name: Build FastAPI app
        run: |
          nohup uvicorn app.main:app --host 0.0.0.0 --port 8000 &
          # Wait a bit for the app to start
          sleep 10
          # Check if the app is running
          curl --silent --fail http://localhost:8000/ || (echo "FastAPI app failed to start" && exit 1)

      # Step 5: Run tests using pytest
      - name: Run tests
        run: |
          pytest

#   build-docker:
#     runs-on: ubuntu-latest
#     needs: build-and-test  # Ensure tests pass before building the Docker image

#     steps:
#       # Step 1: Checkout code
#       - name: Checkout repository
#         uses: actions/checkout@v2

#       # Step 2: Set up Docker
#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v2

#       # Step 3: Cache Docker layers
#       - name: Cache Docker layers
#         uses: actions/cache@v2
#         with:
#           path: /tmp/.buildx-cache
#           key: ${{ runner.os }}-buildx-${{ github.sha }}
#           restore-keys: |
#             ${{ runner.os }}-buildx-

#       # Step 4: Build Docker image
#       - name: Build Docker image
#         run: |
#           docker build -t <service-name>:latest .

#       # Step 5: Push Docker image to Docker Hub (optional)
#       # You can uncomment the following steps to push the image to Docker Hub
#       # - name: Log in to Docker Hub
#       #   uses: docker/login-action@v2
#       #   with:
#       #     username: ${{ secrets.DOCKER_USERNAME }}
#       #     password: ${{ secrets.DOCKER_PASSWORD }}

#       # - name: Push Docker image
#       #   run: |
#       #     docker push <service-name>:latest
